#include "nr3.h"
#include "utilities.h"
#include "svd.h"
#include <iostream>

using namespace std;


Doub f(Doub x,Doub y){
    return 1.0+x+y;
}

int main(){
    Doub N = 4;
    Doub h = 1.0/16;
    MatDoub A(pow(N-1,2),pow(N-1,2));
    Doub a0 = 0; Doub a1 = 1;
    Doub b0 = 0; Doub b1 = 1;
    Doub x0 = 0; Doub y0 = 0;

    A[0][0] = 4;     A[0][1] = -1;    A[0][2] = 0;     A[0][3] = -1;    A[0][4] = 0;     A[0][5] = 0;     A[0][6] = 0;     A[0][7] = 0;     A[0][8] = 0;
    A[1][0] = -1;    A[1][1] = 4;     A[1][2] = -1;    A[1][3] = 0;     A[1][4] = 0;     A[1][5] = -1;    A[1][6] = 0;     A[1][7] = 0;     A[1][8] = 0;
    A[2][0] = 0;     A[2][1] = -1;    A[2][2] = 4;     A[2][3] = 0;     A[2][4] = 0;     A[2][5] = -1;    A[2][6] = 0;     A[2][7] = 0;     A[2][8] = 0;
    A[3][0] = -1;    A[3][1] = 0;     A[3][2] = 0;     A[3][3] = 4;     A[3][4] = -1;    A[3][5] = 0;     A[3][6] = -1;    A[3][7] = 0;     A[3][8] = 0; 
    A[4][0] = 0;     A[4][1] = -1;    A[4][2] = 0;     A[4][3] = -1;    A[4][4] = 4;     A[4][5] = -1;    A[4][6] = 0;     A[4][7] = -1;    A[4][8] = 0;
    A[5][0] = 0;     A[5][1] = 0;     A[5][2] = -1;    A[5][3] = 0;     A[5][4] = -1;    A[5][5] = 4;     A[5][6] = 0;     A[5][7] = 0;     A[5][8] = -1;
    A[6][0] = 0;     A[6][1] = 0;     A[6][2] = 0;     A[6][3] = -1;    A[6][4] = 0;     A[6][5] = 0;     A[6][6] = 4;     A[6][7] = -1;    A[6][8] = 0;
    A[7][0] = 0;     A[7][1] = 0;     A[7][2] = 0;     A[7][3] = 0;     A[7][4] = -1;    A[7][5] = 0;     A[7][6] = -1;    A[7][7] = 4;     A[7][8] = -1;
    A[8][0] = 0;     A[8][1] = 0;     A[8][2] = 0;     A[8][3] = 0;     A[8][4] = 0;     A[8][5] = -1;    A[8][6] = 0;     A[8][7] = -1;    A[8][8] = 4;

    VecDoub b(9);
    b[0] = pow(h,2.0)*f(x0+h*0, y0+h*0)+a0+b0;
    b[1] = pow(h,2.0)*f(x0+h*0, y0+h*1)+a0;
    b[2] = pow(h,2.0)*f(x0+h*0, y0+h*2)+a0+b1;
    b[3] = pow(h,2.0)*f(x0+h*1, y0+h*0)+b0;
    b[4] = pow(h,2.0)*f(x0+h*1, y0+h*1);
    b[5] = pow(h,2.0)*f(x0+h*1, y0+h*2)+b1;
    b[6] = pow(h,2.0)*f(x0+h*2, y0+h*0)+a1+b0;
    b[7] = pow(h,2.0)*f(x0+h*2, y0+h*1)+a1;
    b[8] = pow(h,2.0)*f(x0+h*2, y0+h*2)+a1+b1;

    VecDoub_O x(9);

    SVD svd(A);
    svd.solve(b,x,svd.eps);

    util::print(x);
    

    return 0;
}
